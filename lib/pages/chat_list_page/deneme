 Widget _buildMessageList(List<Message> messageList, BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Flexible(
          child: ListView.builder(
            shrinkWrap: true,
            reverse: true,
            controller: _controller,
            itemCount: messageList.length,
            itemBuilder: (BuildContext context, int index) {
              return _showMessageWidget(currentMessage: messageList[index]);
            },
          ),
        ),
        Row(
          children: [
            Form(
              key: _formKey,
              child: Expanded(
                child: Padding(
                  padding:
                      const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                  child: TextFormField(
                    validator: (value) {
                      if (value == null || value?.trim().length == 0) {
                        return 'Please write something';
                      }
                      return null;
                    },
                    controller: Provider.of<WriteMessageViewModel>(context)
                        .messageController,
                    decoration: InputDecoration(
                        hintText: "Mesaj yazin",
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                        )),
                  ),
                ),
              ),
            ),
            IconButton(
                onPressed: () async {
                  if (_formKey.currentState!.validate()) {
                    await Provider.of<WriteMessageViewModel>(context,
                            listen: false)
                        .addMessageToFirestore(
                            receiverUser: receiverUser,
                            sessionOwner: sessionOwner);

                    /// Firebase kayittan sonra post yapicam.Yani send push Notitification
                    await Provider.of<WriteMessageViewModel>(context,
                            listen: false)
                        .sendPushNotification(
                            receivedUser: receiverUser,
                            sessionOwner: sessionOwner);
                  }
                  _scrollDown();
                  Provider.of<WriteMessageViewModel>(context, listen: false)
                      .messageController
                      .clear();
                },
                icon: Icon(Icons.send))
          ],
        )
      ],
    );
  }


   Widget _showMessageWidget({required Message currentMessage}) {
      print(DateFormat.Hm().format(currentMessage.createdTime));
      return Column(
        crossAxisAlignment: currentMessage.fromMe == true
            ? CrossAxisAlignment.end
            : CrossAxisAlignment.start,
        children: [
          Padding(
            padding: EdgeInsets.all(10),
            child: Container(
              decoration: BoxDecoration(
                  color: currentMessage.fromMe == true
                      ? Colors.grey[700]
                      : Colors.grey[900],
                  borderRadius: BorderRadius.circular(12)),
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Text(
                  "${currentMessage.content}",
                  style: TextStyle(color: Colors.white, fontSize: 20),
                ),
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 20),
            child: Text("${DateFormat.Hm().format(currentMessage.createdTime)}"),
          )
        ],
      );
    }